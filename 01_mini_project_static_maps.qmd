---
title: "01 Mini Project: Static Maps"
author: "Solveig Senf"
sidebar: false
format:
  pdf: default
editor_options: 
  chunk_output_type: console
---

This project features three maps (a static and interactive version of the same variable and a single static map of different variable) that display data from the Centers for Disease Control and Prevention (CDC). Data on Covid-19 levels was collected from February 2022 to May 2023 on a county level. This project displays data recorded on May 11, 2023. For the purposes of this state-level project, I will use the average of county-level data for each state to display Covid-19 cases per 100k. Data can be accessed [here](https://data.cdc.gov/Public-Health-Surveillance/United-States-COVID-19-Community-Levels-by-County/3nnm-4jni/about_data). 

Additionally, this project contains two maps (a static and interactive version) that display the 2024 Presidential Election results. Election data is from the Federal Election Commission (FEC) and can be found at [this link](https://www.fec.gov/introduction-campaign-finance/election-results-and-voting-information/). 

The interactive maps in this project can be found [here](https://github.com/solveigsenf/SDS264/blob/main/01_mini_project_interactive_maps.html) (I think...).

```{r}
library(tidyverse)
library(mdsr)
library(maps)
library(viridis)
library(lubridate)
library(leaflet)
library(sf)
library(RColorBrewer)
```

COVID-19 Data

```{r}
#data set from the CDC
cdc_data <- read.csv("~/Downloads/01_United_States_COVID-19_Community_Levels_by_County_20250216.csv")
```

```{r}
covid_data <- cdc_data |>
  filter(date_updated == "2023-05-11", 
         !(state %in% c("Puerto Rico", 
                        "American Samoa", 
                        "Commonwealth of the Northern Mariana Islands", 
                        "United States Virgin Islands", 
                        "Guam")))
```

```{r}
states_polygon <- as_tibble(map_data("state")) |>
  select(region, group, order, lat, long)

states_sf <- read_sf("https://rstudio.github.io/leaflet/json/us-states.geojson") |>
  select(name, geometry)
```

```{r}
#convert county-level data to state-level data
covid_state_level_data <- covid_data |>
  filter(covid_cases_per_100k != "NA") |>
  group_by(state) |>
  summarize(covid_cases_per_100k = mean(covid_cases_per_100k))
```

```{r}
#format state names in all data sets so they match 
covid_state_level_data <- covid_state_level_data |>
  mutate(state = str_to_lower(state),
         state = str_replace_all(state, " ", ""),
         state = str_squish(state))

states_sf <- states_sf |>
  mutate(name = str_to_lower(name),
         name = str_replace_all(name, " ", ""))

states_polygon <- states_polygon|>
  mutate(region = str_replace_all(region, " ", ""))
```

```{r}
#join covid data with map data
covid_map <- covid_state_level_data |>
  right_join(states_polygon, by =c("state" = "region"))

covid_map <- covid_map |>
  right_join(states_sf, by =c("state" = "name"))
```

Static Map #1

```{r}
covid_map |>
  ggplot(mapping = aes(x = long, y = lat,
                       group = group)) +
  geom_polygon(aes(fill = covid_cases_per_100k), color = "white", linewidth = 0.2) +
  labs(fill = "Number of Cases",
       x = "",
       y = "",
       title = "Average number of COVID-19 Cases Per 100,000 People",
       subtitle = "As of May 11, 2023") +
  coord_map() +
  theme_void() +
  scale_fill_viridis(option = "mako", direction = -1)
```

Static Map #2

```{r}
county_map <- map_data("county") |>
  mutate(subregion = str_to_lower(subregion),
         subregion = str_replace_all(subregion, " ", ""),
         subregion = str_squish(subregion)) |>
  mutate(region = str_to_lower(region),
         region = str_replace_all(region, " ", ""))

#fixing odd formating for county names in CDC data
covid_data_clean <- covid_data |>
  select(county, state, covid.19_community_level, covid_cases_per_100k) |>
  mutate(state = str_to_lower(state),
         state = str_replace_all(state, " ", ""),
         state = str_squish(state)) |>
  mutate(county = str_to_lower(county),
         county = str_replace_all(county, " ", ""),
         county = str_squish(county),
         county = str_replace_all(county, "county", ""),
         county = str_replace_all(county, "st.", ""),
         county = str_replace_all(county, "city", ""),
         county = str_replace_all(county, "muni", ""),
         county = str_replace_all(county, "parish", ""))

covid_county_level_data <- covid_data_clean |>
  right_join(county_map, by =c("county" = "subregion", "state" = "region")) |>
  mutate(covid.19_community_level = fct_relevel(covid.19_community_level, "High", "Medium", "Low"))

covid_county_level_data |>
  ggplot(mapping = aes(x = long, y = lat,
                       group = group)) +
  geom_polygon(aes(fill = covid.19_community_level), color = "white", linewidth = 0.05) +
  labs(fill = "Covid Level",
       x = "",
       y = "",
       title = "COVID-19 Levels In Each County",
       subtitle = "As of May 11, 2023") +
  scale_fill_manual(values = c("High" = "darkred", "Medium" = "gold", "Low" = "darkgreen", "NA" = "gray")) +
  coord_map() +
  theme_void() 
```

Election Data

Static Map #3

```{r}
#data from the federal election commission
election_data <- read.csv("~/Downloads/2024presgeresults.csv")

election_data <- election_data |>
  select(STATE, ELECTORAL.VOTE..TRUMP..R., ELECTORAL.VOTE..HARRIS..D., HARRIS, TRUMP) |>
  rename(state = STATE, 
         Trump = ELECTORAL.VOTE..TRUMP..R., 
         Harris = ELECTORAL.VOTE..HARRIS..D.,
         votes_harris = HARRIS,
         votes_trump = TRUMP) |>
  pivot_longer(cols = c(Trump, Harris),
               names_to ="candidate_won",
               values_to = "electoral_votes") |>
  filter(electoral_votes != "NA") |> #remove observations that show the loosing candidate in each state
  slice(-30, -20) 
#slice to remove rows 30 and 20 which are second observations of maine and nebraska due to the fact that they split electoral votes
#the observation recording the winning candidate is kept. 

election_data <- election_data |>
  mutate(state = str_to_lower(state),
         state = str_replace_all(state, " ", ""),
         state = str_squish(state)) |>
  mutate(votes_harris = str_squish(votes_harris),
         votes_trump = str_squish(votes_trump))
```

```{r}
electoral_map <- election_data |>
  right_join(states_polygon, by =c("state" = "region"))

electoral_map <- electoral_map |>
  right_join(states_sf, by =c("state" = "name"))
```

```{r}
electoral_map |>
  ggplot(mapping = aes(x = long, y = lat,
                       group = group)) +
  geom_polygon(aes(fill = candidate_won), color = "white", linewidth = 0.2) +
  labs(fill = "Winning Candidate",
       x = "",
       y = "",
       title = "2024 Presidential Election Electoral College Map") +
  coord_map() +
  scale_fill_manual(values = c("Harris" = "darkblue", "Trump" = "darkred")) +
  theme_void()
```